#!/bin/bash

OLDDIR=$PWD
. $HOME/vorkKernel-Scripts/vorkKernelScripts/Scripts/colorize.sh

# only adjust these dirs
export BUILD_DIR=$HOME/Dropbox/Public
export SCRIPT_DIR=$HOME/vorkKernel-Scripts
export VORKSCRIPT_DIR=$HOME/vorkKernel-Scripts/vorkKernelScripts
export TOOLCHAIN_DIR=$HOME/vorkChain

# check if we want to use ccache
if [ -f $VORKSCRIPT_DIR/Tools/ccache.txt ]; then	
	export ARM_EABI="ccache $TOOLCHAIN_DIR/toolchain/bin/arm-eabi-"
	export USE_CCACHE=1
else 
	export ARM_EABI=$TOOLCHAIN_DIR/toolchain/bin/arm-eabi-
fi

cd $VORKSCRIPT_DIR

. $VORKSCRIPT_DIR/Scripts/cleanup.sh

NOW=$(date +"%Y%m%d")

# If there is no parameter than the question is asked
if [ ! -n "$1" ]; then
	msg "Do you want to build a release or a test version?"
	msg "1 for Release, 2 for Test"
	read BUILD
else
	BUILD=$1
fi

case $BUILD in
	1) signed_file=vorkKernel-"$NOW".zip
	   export release=release
	   export device=LGP990
	;;
	2) signed_file=vorkKernel-LGP990.zip
	   export release=test
	   export device=LGP990
	;;
	3) signed_file=vorkKernel-"$NOW".zip
	   export release=release
	   export device=XOOM
	;;
	4) signed_file=vorkKernel-Xoom.zip
	   export release=test
	   export device=XOOM
	;;
esac

export SOURCE_DIR=$HOME/vorkKernel-$device

clear

. $VORKSCRIPT_DIR/Scripts/buildconfig.sh

msg "Compiling modules"

. $VORKSCRIPT_DIR/Scripts/modules.sh

#if [ "$release" == "release" ]; then 
#. $VORKSCRIPT_DIR/Scripts/update.zip_creator.sh
#fi

. $VORKSCRIPT_DIR/Scripts/zipper.sh Awesome

if [ "$release" == "release" ]; then
        if [ -d $BUILD_DIR/$device ]; then
          mv $signed_file $BUILD_DIR/$DEVICE/$signed_file
        else
          mkdir $BUILD_DIR/$device
          mv $signed_file $BUILD_DIR/$device/$signed_file
        fi
else
        if [ -d $BUILD_DIR/TEST ]; then
          mv $signed_file $BUILD_DIR/TEST/$signed_file
        else
          mkdir $BUILD_DIR/TEST
          mv $signed_file $BUILD_DIR/TEST/$signed_file
        fi
fi

# still build a old update.zip (kernel manager)
#if [ "$release" == "lazer" ]; then
#	. $VORKSCRIPT_DIR//Scripts/zipper.sh Update
#	if [ -d $BUILD_DIR/LGP990zips ]; then
#		mv $signed_file $BUILD_DIR/LGP990zips/$signed_file
#		else
#			mkdir $BUILD_DIR/LGP990zips
#			mv $signed_file $BUILD_DIR/LGP990zips/$signed_file
#	fi
#fi

if [ "$release" == "release" ]; then
    #Stuff for update app
	msg "$NOW > $BUILD_DIR/UpdateApp/version_$device"

	python $VORKSCRIPT_DIR/Scripts/pyndexer/pyndexer.py
	python /opt/vorkBot/vorkbot.py $device
fi

cd $OLDDIR
